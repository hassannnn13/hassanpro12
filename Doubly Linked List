    class Node {
        int data;
        Node prev;
        Node next;

        Node(int data) {
            this.data = data;
            this.prev = null;
            this.next = null;
        }
    }

class DoublyLinkedList {
    Node head;

    public void AddAtBeg(int data) {
        Node newNode = new Node(data);
        if (head == null) { 
            head = newNode;
        } else {
            newNode.next = head;
            head.prev = newNode;
            head = newNode;
        }
    }
    public void printList() {
        if (head == null) {
            System.out.println("List is empty.");
            return;
        }
        Node current = head;
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
        System.out.println();
    }

    public static void main(String[] args) {
        DoublyLinkedList list = new DoublyLinkedList();
        
        list.AddAtBeg(10);
        list.AddAtBeg(20);
        list.AddAtBeg(30);

        System.out.println("List after prepending nodes:");
        list.printList(); 
    }
}


// Node At Last
  public void AddAtLast(int data) {
        Node newNode = new Node(data);
        if (head == null) { 
            head = newNode;
        } else {
              Node current = head;
          while(cuurent.next != null){
            current = current.next;
          }
          current.next = newNode;
          newNode.prev = current;   
           }
        }
    }
